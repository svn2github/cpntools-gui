(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN '~beta/postwimp/workspace';
INCLUDE '../../cpnet/referencetable';
INCLUDE '~beta/basiclib/directory';
INCLUDE '../relfile';
INCLUDE '../debug';
INCLUDE '../../cpnet/xmlutilities';
-- Workspacelib: Attributes --

getXMLLibrary: ObjectPool.get
  (# Type::XMLLibrary;
     init::<
       (# 
       do Exception(# do 'XMLLibrary not initialized' -> msg.append; #);
       #);
  #);

XMLLibrary: HMDictionary
  (# filename: ^Text;
     Element:: theXML.Element;
     
     LibraryNotFoundException:< Exception
       (# filename: ^Text;
          enter filename[]
       do 'XMLLibrary not initialized, ' -> msg.append;
          filename[] -> msg.append;
          ' not found.' -> msg.append;
          msg.newline;
          INNER;
       #);
     
     regenerate:<
       (# out: ^File;
       do &File[] -> out[];
          filename[] -> out.name;
          out.openWrite;
          '<library>' -> out.putline;
          '<workspaceElements id="Template_CPNet"><generator tool="CPN Tools" version="" format="2"/><cpnet><globbox><color id="id1"><id>INT</id><int/></color></globbox><page id="id2"><pageattr name="New Page"/></page></cpnet></workspaceElements>' -> out.putline;
          '<place id="Template_Place"><posattr x="0" y="0"/><fillattr colour="White" pattern="Solid"/><lineattr colour="Black" thick="1" type="Solid"/><textattr colour="Black" bold="false"/><text></text><ellipse w="21" h="14"/></place>' -> out.putline;
          '<AuxText id="Template_Aux_Label"><posattr x="-34.628975" y="19.787986"/><fillattr colour="White" pattern="Solid"/><lineattr colour="Black" thick="1" type="Solid"/><textattr colour="Black" bold="false"/><label w="6.360424" h="5.300353"/><text>text</text></AuxText>' -> out.putline;
          '<Aux id="Template_Aux_Box"><posattr x="-93.286219" y="21.908127"/><fillattr colour="White" pattern="Solid"/><lineattr colour="Black" thick="1" type="Solid"/><textattr colour="Black" bold="false"/><box w="21.201413" h="21.201413"/></Aux>' -> out.putline;
          '<Aux id="Template_Aux_Ellipse"><posattr x="-93.286219" y="21.908127"/><fillattr colour="White" pattern="Solid"/><lineattr colour="Black" thick="1" type="Solid"/><textattr colour="Black" bold="false"/><ellipse w="21.201413" h="21.201413"/></Aux>' -> out.putline;
          '<Aux id="Template_Aux_Line"><posattr x="0" y="0"/><fillattr colour="White" pattern="solid"/><lineattr colour="Black" thick="0" type="solid"/><textattr colour="Black" bold="false"/><line points="(0,50)(0,-50)"/></Aux>' -> out.putline;
          '<trans id="Template_Transition"><posattr x="0" y="0"/><fillattr colour="White" pattern="Solid"/><lineattr colour="Black" thick="1" type="Solid"/><textattr colour="Black" bold="false"/><text></text><box w="21" h="12"/></trans>' -> out.putline;
          '<arc id="Template_Arc" orientation="PtoT"><posattr x="0.000000" y="0.000000"/><fillattr colour="White" pattern="Solid"/><lineattr colour="Black" thick="1" type="Solid"/><textattr colour="Black" bold="false"/><transend idref="_Transend_"/><placeend idref="_Placeend_"/><annot id="Template_Annotation"><posattr x="7.852253" y="2.868376"/><fillattr colour="White" pattern="Solid"/><lineattr colour="Black" thick="0" type="Solid"/><textattr colour="Black" bold="false"/><text></text></annot></arc>' -> out.putline;
          '<fusioninfo id="Template_FusionInfo" name="_Fusionname_"><posattr x="-67.844523" y="15.901060"/><fillattr colour="White" pattern="Solid"/><lineattr colour="Black" thick="0" type="Solid"/><textattr colour="Black" bold="false"/></fusioninfo>' -> out.putline;
          '</library>' -> out.putline;
          out.close;
          INNER;
       #);
     
     init::<
       (# entry: @Diskentry;
          input: @File;
          data: ^theXML.Element;
       enter filename[]
       do filename[] -> relativeFile -> filename[];
          filename[] -> entry.path;
          (if not ( (entry.exists) AND (entry.isFile) AND (entry.readable) ) then
              regenerate;
          if);
          (if (entry.exists) AND (entry.isFile) AND (entry.readable) then
              filename[] -> input.name;
              input.openRead;
              input[] -> theXML.parse -> data[];
              input.close;
              data.scanElements(# do ('id' -> current.lookupText, current[]) -> associate; #);
           else
              filename[] -> LibraryNotFoundException;
          if);
       #);
  #);
