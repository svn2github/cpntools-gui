(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN '~beta/postwimp/workspace';
INCLUDE '../../debug';
INCLUDE '../../instruments/cpnoption';

-- Workspacelib: attributes --

(* figures should be used in icons and cursors and other representations of 
 * instrument actions and interactions
 *)

Figure: Composite
  (# useDefaultHotspot:< booleanValue;
     options: ^OptionList;
     setOptions: (# enter (# enter options[] do this(Figure)[] -> options.attach; #) #);
     (* a figure should be updated whenever someone changes or sets 
      * its options for instance when specifying if a 'colorfigure' 
      * should be a red or blue one
      *)
     update:< object;
     
     onChanged::<
       (# 
       do INNER;
          update;
       #);
  #);



