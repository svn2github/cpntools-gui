(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN '../relfile';
LINKOPT nti 'kernel32.lib';
INCLUDE '~beta/sysutils/cstring';

-- lib: attributes --
GetTempPath: external
(#	in0: @integer; (* DWORD *)
	in1: @integer; (* LPTSTR *)
	result: @integer;
	enter	(in0, in1)
	do	'GetTempPathA' -> callStd;
	exit	result
#);

-- getTempPathDoPart: doPart --
do	(#	cstr: @CString;
		tmp1, tmp2: @integer;
	do	0 -> tmp2 -> cstr.init;
		L:
		(#
		do	(tmp1, (cstr)) -> GetTempPath -> tmp1;
			(if tmp1 >= tmp2 then
				cstr.free;
				tmp1 -> tmp2 -> cstr.init;
				restart L;
			if);
		#);
		cstr.get -> t[];
		cstr.free;
	#);
