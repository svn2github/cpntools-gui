(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN 'cpnmenu';
INCLUDE '../instruments/toolinstruments';
INCLUDE '../resources/texts/texts';

-- CpnWorkSpaceLib: attributes --
OptionMenu: CPNMenu
  (# TargetType:: theIndex.OptionNode;
     LeftItem:: 
       (# SetDefaultInstrument: @Instrument
            (# TargetType:: theIndex.OptionNode;
               relevant::
                 (#
		 do 'Testig relevancy' -> debugTemp;
		    (if ((target.content.getDefault) <> NONE) then
			'true' -> debugTemp;
			if);
		    (target.content.getDefault) <> NONE -> value;
                 #);
               apply::
                 (#
                 do target.content.setToDefault;
                 #);
            #);
          init::
            (#
            do 'Set default' -> name[];
               SetDefaultInstrument[] -> theInstrument[];
               theInstrument.init;
            #);
       #);
     DeleteItem::
       (# 
          init::
            (# 
            do NamesToolCellCloseOptions -> getGlobalNames -> name[];
               &CloseOptionViewIndexInstrumentAdapter[] -> theInstrument[];
               theInstrument.init;
            #);
       #);
  #);

FolderPathOptionMenu: CPNMenu
  (# TargetType:: theIndex.FolderPathOptionNode;
     CloneItem::
       (# init::
            (# FolderInstrument: @Instrument
                 (# TargetType:: theIndex.FolderPathOptionNode;
                    apply::
                      (# selector: @widget.selectFolder;
                         path: ^Text;
                      do selector -> path[];
                         (if (path[] <> none) and
                             (not ('' -> path.equal)) then
                             path[] -> target.content.theValue[];
                             path[] -> target.contentText.content[];
                             target.content.changed;
                         if);
                      #);
                 #);
            do FolderInstrument[] -> theInstrument[];
               NamesFolderPathOptionNodeChoosePath -> getGlobalNames -> name[];
            #);
       #);
     DeleteItem::
       (# init::
            (# DefaultInstrument: @Instrument
                 (# TargetType:: theIndex.FolderPathOptionNode;
                    apply::
                      (# 
                      do target.net.path[] -> target.content.theValue[];
                         target.net.path[] -> target.contentText.content[];
                         target.content.changed;
                      #);
                    relevant:: 
                      (# 
                      do target.net.path[] <> none -> value;
                      #);
                 #);
            do DefaultInstrument[] -> theInstrument[];
               NamesFolderPathOptionNodeModelPath -> getGlobalNames -> name[];
            #);
       #);
  #);
