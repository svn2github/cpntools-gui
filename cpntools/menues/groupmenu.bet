(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN 'cpnmenu';
INCLUDE '../instruments/groupinstruments';
INCLUDE '../instruments/creationinstruments';
INCLUDE '../resources/texts/texts';

-- CPNWorkSpaceLib: attributes --

GroupMenu: CPNMenu
  (# TargetType:: GroupTab;
     
     CloneItem::
       (# init::
            (#
            do NamesGroupMenuCloneItem -> getGlobalNames -> name[];
               &SimpleCloneGroupInstrument[] -> theInstrument[];
               theInstrument.init;
            #);
          makeDynamicName::
            (#
            do (if true
                // (target.getGroup).IsGlobal then
                   ' ' -> txt[];
                // NOT (target.getGroup).all then
                   name[] -> txt[];
                else
                   NamesGroupMenuNewGroupWithAll -> getGlobalNames -> txt[];
               if);
            #);
       #);

     RightItem::
       (# init::
            (#
            do NamesGroupMenuGroupItem -> getGlobalNames -> name[];
               &SimpleNewGroupTabInstrument[] -> theInstrument[];
               theInstrument.init;
            #);
       #);
     
     LeftItem::
       (# init::
            (# 
            do NamesGroupMenuMoveToSubpage -> getGlobalNames -> name[];
               'MoveToSubPage' -> theInstrumentList.lookup -> theInstrument[];
            #);          
       #);
     
     BottomLeftItem::
       (# init::
            (# 
            do &CreateGlobalGroupInstrument[] -> theInstrument[];
               theInstrument.init;
               NamesGroupMenuCreateGlobalGroup -> getGlobalNames -> name[];
            #);
       #);
     
     relevant::<
       (# 
       do (target.getGroup).all -> value;
          inner;
       #);
  #);

GroupNotAllMenu: GroupMenu 
  (# DeleteItem::
       (# init::
            (#
            do &SimpleDeleteGroupInstrument[] -> theInstrument[];
               theInstrument.init;
               NamesGroupMenuDeleteItem -> getGlobalNames -> name[];
            #);          
       #);       
     relevant::
       (# 
       do not (target.getGroup).all -> value;
       #);
  #);
