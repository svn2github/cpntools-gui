(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN 'cpnmenu';
INCLUDE '../instruments/binderinstruments';
INCLUDE '../instruments/deletioninstruments';
INCLUDE '../instruments/helpinstruments';
INCLUDE '../resources/texts/texts';

--cpnworkspacelib:attributes--


CPNPageTabNodeMenu: CPNMenu
  (# TargetType:: theIndex.TabNode;
     relevant::
       (# 
       do target.theTab.theSheet.content## <= PageInstance## -> value;
       #);
     LeftItem::
       (# init::
            (#
            do &CloseTabInstrument[] -> theInstrument[];
               theInstrument.init;
               NamesTabMenuClosePageItem -> getGlobalNames -> name[];
            #);
       #);
     DeleteItem::
       (# init::
            (#
            do true -> dynamicName;
               NamesInstanceNodeMenuDeletePageItem -> getGlobalNames -> name[];
               &DeletePageInstrument[] -> theInstrument[];
               theInstrument.init;
            #);
          makeDynamicName::
            (# theTabNode: ^theIndex.TabNode;
               thePageInstance: ^PageInstance;
            do target[] -> theTabNode[];
               theTabNode.theTab.theSheet.content[] -> thePageInstance[];
               (if thePageInstance.getSuperpageInstance = none then
                   name[] -> txt[];
                else
                   (if thePageInstance.thePage.allPageInstancesUnderSameTransition then
                       'Move Page\nTo Top Level' -> txt[];
                    else
                       'Delete\nPage\nInstance' -> txt[];
                   if);
               if);               
            #);          
       #);
  #);

ToolSheetTabNodeMenu: CPNMenu
  (# TargetType:: theIndex.TabNode;
     relevant::
       (# 
       do target.theTab.theSheet.content## <= CPNToolCollection## -> value;
       #);
     CloneItem::
       (# init::
            (#
            do NamesTabMenuCloneToolItem -> getGlobalNames -> name[];
               &CloneToolCollectionInstrument[] -> theInstrument[];
               theInstrument.init;
            #);
       #);
     
     DeleteItem::
       (# init::
            (#
            do NamesTabMenuDeleteToolItem -> getGlobalNames -> name[];
               &DeleteToolCollectionInstrument[] -> theInstrument[];
               theInstrument.init;
            #);
       #);
     
     RightItem::
       (# init::
            (#
            do &HelpToolCollectionInstrument[] -> theInstrument[];
               theInstrument.init;
               NamesTabMenuHelpToolItem -> getGlobalNames -> name[];
            #);
       #);
     LeftItem::
       (# init::
            (#
            do &CloseTabInstrument[] -> theInstrument[];
               theInstrument.init;
               NamesTabMenuClosePageItem -> getGlobalNames -> name[];
            #);
       #);
  #);
