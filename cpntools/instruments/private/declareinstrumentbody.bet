(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN '../declareinstruments';
INCLUDE '../creationinstruments';
INCLUDE 'creationinstrumentsbody';

-- ConstraintArcClippingInit:DoPart --
do 

-- ConstraintArcClippingInsert:DoPart --
do (#
   do
      t1[] -> elm.setSource;
      t2[] -> elm.setTarget;
      elm[] -> context.addConstraintArc;
      elm[] -> t1.addConstraintArc;
      elm[] -> t2.addConstraintArc;
      elm.normalizeOrder;
      storage.scan
     	(#             
     	do elm[] -> current.insert;
     	#);
      
      (elm.getAnnotation).computePosition;
   #);
   
-- ConstraintArcClippingRemove:DoPart --
do storage.scanReverse
     (#
     do elm[] -> current.remove;
     #);

   elm[] -> context.removeConstraintArc;
   elm[] -> t1.removeArc;
   elm[] -> t2.removeArc;

 --CreateConstraintArc:doPart--
do (# clipping: ^ConstraintArcClipping;
      clip: ^PageClip;
      groups: ^GroupList;
      com: ^CreateCommand;
   do 
    	  thePrototype.clone -> theArc[];
    	  
    	  &ConstraintArcClipping[] -> clipping[];
    	  context[] -> MakeGroupList -> groups[];
	  (theArc[], groups[], NONE, source[], destination[]) -> clipping.init;
    	  &PageClip[] -> clip[];
    
	  clipping[] -> clip.add;
    	  
    	  &CreateCommand[] -> com[];
    	  context[] -> com.prepare;
    	  clip[] -> com.apply;
    	  (context.net[], com[]) -> registerCommand;
   #);
 
