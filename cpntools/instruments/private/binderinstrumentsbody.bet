(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN '../binderinstruments';

-- BinderClippingInit:DoPart --
do highlightableSheets.init;
   elm.scanHighlightableSheets
   (# 
   do current[] -> highlightableSheets.append;
   #);
   true -> attached;

-- BinderClippingInsert:DoPart --
do (if not attached then
       highlightableSheets.scan
       (# 
       do current[] -> current.content.attach;
       #);
       true -> attached;
   if);
   (if context[] <> none then 
       elm[] -> context.add;     
   if);
   (if DeleteNotClose then
       elm[] -> elm.onAdded
   if);

-- BinderClippingRemove:DoPart --
do (if true then
       elm[] -> elm.onRemoved;
   if);
   (if context[] <> none then
       elm[] -> context.remove;          
   if);
   (if attached then
       highlightableSheets.scan
       (# 
       do current[] -> current.content.detach;
       #);
       true -> attached;
   if);
   
-- TabClippingInit:DoPart --
do true -> attached;
   elm## <= HighlightableSheet## -> isHighlightable;
   
-- TabClippingInsert:DoPart --
do (if isHighlightable and
       attached then
       elm[] -> elm.content.attach;
   if);
   elm.added;
   elm[] -> context.add;
   (if (theFolderLayer[] <> none) and 
       (context.sheets.size = 1) then
       context[] -> theFolderLayer.add;
   if);
   
-- TabClippingRemove:DoPart --
do (if context.father[] = none then
       elm[] -> context.sheets.remove;
    else
       elm[] -> context.remove;              
   if);
   elm.removed;
   (if context.sheets.size = 0 then
       context[] -> context.onRemoved;
   if);
   (if isHighlightable and
       attached then
       elm[] -> elm.content.detach;
   if);
   
