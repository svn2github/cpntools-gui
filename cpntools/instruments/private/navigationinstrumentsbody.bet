(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN '../navigationinstruments';

-- ShowSubPage:DoPart --
do (# currentBinder, subpageBinder: ^Folder;
      theMoveTabFocusCommand: ^MoveTabFocusCommand;
      theOpenTabCommand: ^OpenTabCommand;
      theCommand: ^Command;
      theClipping: ^Clipping;
      currentSheet, subpageSheet: ^CpnSheet;
      theSubpageInstance: ^PageInstance;
      foundTab: @boolean;
   do scan: theSuperInstance.scanSubpageInstances
        (# 
        do 
           (if current.theTransition[] = theTransition[] then
               current[] -> theSubpageInstance[];
               leave scan;
           if);
        #);
      
      folderManager.theStandardLayer.folders.scan
      (# theBinder: ^Folder;
      do current[] -> theBinder[];
         theBinder.sheets.scan
         (# theSheet: ^CPNSheet;
         do (if current## <= CPNSheet## then
                current[] -> theSheet[];
                (if theSheet.content[] = theSubpageInstance[] then
                    theSheet[] -> subpageSheet[];
                    theBinder[] -> subpageBinder[];               
                    true -> foundTab;
                if);
                (if theSheet.content.thePage[] = theTransition.getCPNPage then
                    theSheet[] -> currentSheet[];
                    theBinder[] -> currentBinder[];
                if);
            if);
         #);
      #);
      
      (if foundTab then      
          &MoveTabFocusCommand[] -> theMoveTabFocusCommand[];
          (currentSheet[], currentBinder[], subpageSheet[], subpageBinder[]) -> theMoveTabFocusCommand.init;
          theMoveTabFocusCommand.prepare;
          theMoveTabFocusCommand.apply;
          theMoveTabFocusCommand[] -> theCommand[];
       else
          &CpnSheet[] -> subpageSheet[];
          theSubpageInstance.thePage.isCanvas -> subpageSheet.init;
          theSubpageInstance[] -> subpageSheet.setContent;
          
          &TabClipping[] -> theClipping[];
          subpageSheet[] -> theClipping.init;
          
          &OpenTabCommand[] -> theOpenTabCommand[];
          theClipping[] -> theOpenTabCommand.init;
          currentBinder[] -> theOpenTabCommand.prepare;
          theOpenTabCommand.apply;
          theOpenTabCommand[] -> theCommand[];
      if);
      (currentSheet.getCPNet,theCommand[]) -> registerCommand;
   #);
