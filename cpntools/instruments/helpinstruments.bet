(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN '../cpnworkspace';
INCLUDE '../resources/help-resources';
INCLUDE '../resources/texts/texts';
INCLUDE 'cpninstrument';
INCLUDE '../resources/figures/standardfigures';

-- CpnWorkspaceLib: attributes --

ShowHelp:
  (# name: ^Text;
  enter name[]
  do (# helpstr: ^Text;
     do (if name[] = NONE then
            '' -> theHelpGlobalizer -> helpstr[];
         else
            name[] -> theHelpGlobalizer -> helpstr[];
        if);
        helpstr[] -> theIndex.ShowHelp;
     #);
  #);


HelpToolCollectionInstrument: FigureTInstrument
  (# TargetType:: ToolTab;
     
     FigureT:: QuestionMarkFigure;
     apply::
       (#
       do target.thesheet.content.helpname[] -> ShowHelp;
       #);
     ToolTip::
       (#
       do Nameshelp -> getGlobalNames -> theTip[];
       #);
     
     init::
       (#
       do 'help_coll'->helpname[];
       #);
  #);


HelpToolCellInstrument: FigureTInstrument
  (# TargetType:: ToolCell;
     FigureT:: QuestionMarkFigure;
     
     apply::
       (#
       do (if target.theinstrument.helpname[] <> NONE then
              target.theinstrument.helpname[] -> ShowHelp;
              (if debugging then
                  'ToolCell: found target.theinstrument.helpname <> none' -> debugInstrument;   
              if);
           else
              (if debugging then 
                 'ToolCell: found target.theinstrument.helpname = none' -> debugInstrument;              
              if);
              (if target.helpName[]<>NONE then
                  target.helpname[] -> ShowHelp;
               else
                  (if target.theCollection.helpname[] <> NONE then
                      target.theCollection.helpname[] -> ShowHelp;
                      (if debugging then 
                          'ToolCell: found target.thecollection.helpname <> none' -> debugInstrument;    
                      if);   
                   else
                      (if debugging then 
                          'ToolCell: found target.thecollection.helpname = none' -> debugInstrument;
                      if);    
                  if);
              if);
          if);
       #);
     ToolTip::
       (#
       do Nameshelp -> getGlobalNames -> theTip[];
       #);
     
     init::
       (#
       do 'help_cell'->helpname[];
       #);
  #);


HelpInstrument: FigureTInstrument
  (# 
     FigureT:: QuestionMarkFigure;
     
     apply::
       (#
       do 'Help-Instrument is not implemented' -> putline;
          finish;
       #);
     ToolTip::
       (#
       do Nameshelp -> getGlobalNames -> theTip[];
       #);
     
     init::
       (#
       do 'help'->helpname[];
       #);
  #);

