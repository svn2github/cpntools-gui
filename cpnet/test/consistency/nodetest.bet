(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN '../../private/cpnetbody';

INCLUDE '../../../cpntools/consistency/engine';
INCLUDE '../../../cpntools/debug';

-- workspacelib: attributes --

NodeTest: ConsistencyTest
  (# TargetType::Node;
     
     MyArcDosntKnowMeNotification: ConsistencyNotification
       (# a: ^Arc;
       enter a[]
       do 'Arc %s is in arclist of %s %s, but dosnt know about it'
            -> msg.putformat(# 
                            do a.id[] -> s;
                               target[] -> getpatternname -> s;
                               target.id[] -> s;
                            #);
       #);
     
     UsedDeclDosntKnowMeNotification: ConsistencyNotification
       (# dl: ^Decl;
       enter dl[]
       do 'Place %s uses Decl %s, but the decl dosnt know about it.'
            -> msg.putformat(# 
                            do (if target.theName[] <> none then
                                   target.theName[] -> s;
                                else
                                   target.id[] -> s;
                               if);
                               dl.shortname -> s;
                            #);
       #);
     
     run::
       (# found: @boolean;
       do search1: target.myArcs.scan
            (# 
            do (if target[]
                //current.placeend[] then
                //current.transend[] then
                else
                   current[] -> MyArcDosntKnowMeNotification;
               if);
            #);
          (* If a place has a decl in its uses list, the decl
           * should have the place in its usedByNodes list *)
          (if not target.uses.empty then
              target.uses.scan
              (# 
              do (if not (target[] -> current.usedByNodes.has) then 
                     current[] -> UsedDeclDosntKnowMeNotification
                 if);
              #);
          if);
       #);
  #);
