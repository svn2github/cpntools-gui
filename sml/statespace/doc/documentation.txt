
Made by Peter Mechlenborg (metch@daimi.au.dk), Mon Jan 24 10:22:05 RST 2005


- Intro.

  This is a small guide to the new state-space tool build on top of
  CPN Tools. The state-space tool is not restricted to CPN Tools and
  it can be applied to other contexts as well.

  The tool consists of three parts: exploration algorithms, simulators
  and storages. The simulators and storages are defined by interfaces
  (SML signatures) and the exploration algorithms are only aware of
  these and not the implementations, therefore you can combine
  simulators and storages to be used by an exploration in a very
  modular way.

  All the files mentioned here contains a description of their purpose
  as part of their header, and all the signatures also contains
  documentation for each primitive.


- Directory structure.

  The root of the state-space directory contains the following
  subdirectories and files.

   cpntools/ This directory contains all the files that CPN Tools uses
     to switch to state-space mode. The use of these files will be
     explained in the next section.

   doc/ The directory where this file belongs, together with a small
     CPN model that illustrates how to use the state-space tool.

   lib/ Different kinds of helper libraries.

   simulator/ Contains the simulator signature in simulator-sig.sml.
     cpntools-simulator.sml is an implementation of the signature that
     provides a simulator for CPN Tools.  timed-simulator.sml is a
     wrapper around a simulator that can measure how much time is spent
     by the simulator.

   storage/ Contains the storage signature in storage-sig.sml.
     list-storage.sml is a very simple storage that just uses a
     list. cpntools-storage.sml is a wrapper around the default
     storage in CPN Tools. Since this storage is very tightly cupelled
     with the simulator in CPN Tools, there are certain limitations to
     it's use. These limitations are described in the header of the
     file. timed-storage.sml is a wrapper around a storage that can
     measure how much time is spent by the storage.

   exploration/ This directory contains the exploration algorithms and
     an exploration signature. There exists other algorithms, but they
     are not included because they are not completely up to date with
     the newest changes to the simulator and storage signatures.

   test/ A small test framework. See the README file in test/ for more
     information.

   build.sml The file that are used compile and load the state-space
     tool. See the section "How to build" for more information.


- How to switch.

  In order to calculate the state-space for a CPN model, it is
  necessary to switch CPN Tools from simulation mode to state-space
  mode. This is done by evaluating the code below in a text box.

    val ogpath = "c:/cpn2000/sml/statespace/";
    use (ogpath^"cpntools/switch/switch.sml");

  ogpath should be changed to match the path accordingly.

  The switch builds all the code that is needed to make the CPN Tools simulator and
  storage interfaces.


- How to build.

  To use the state-space tool it is first necessary to switch to
  state-space mode (see above), and afterwards compile and load all
  the state-space files, this is done by evaluating the following
  code.

    use (ogpath^"build.sml");

  After this an exploration structure has to be made. This is done by
  instantiating a exploration functor.

    Example:    

    structure Queue       = ListQueueFn   (structure Simulator    = CPNToolsSimulator)

    structure Exploration = ExplorationFn (structure Simulator    = CPNToolsSimulator
                                           structure StateStorage = CPNToolsStorageWrapper
                                           structure Queue        = Queue)

  With the above it is possible to calculate the state-space with a
  call to the function Exploration.explore.
