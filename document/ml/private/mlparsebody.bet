(************************************************************************)
(* CPN Tools                                                            *)
(* Copyright 2010-2011 AIS Group, Eindhoven University of Technology    *)
(*                                                                      *)
(* CPN Tools is originally developed by the CPN Group at Aarhus         *)
(* University from 2000 to 2010. The main architects behind the tool    *)
(* are Kurt Jensen, Soren Christensen, Lars M. Kristensen, and Michael  *)
(* Westergaard.  From the autumn of 2010, CPN Tools is transferred to   *)
(* the AIS group, Eindhoven University of Technology, The Netherlands.  *)
(*                                                                      *)
(* This file is part of CPN Tools.                                      *)
(*                                                                      *)
(* CPN Tools is free software: you can redistribute it and/or modify    *)
(* it under the terms of the GNU General Public License as published by *)
(* the Free Software Foundation, either version 2 of the License, or    *)
(* (at your option) any later version.                                  *)
(*                                                                      *)
(* CPN Tools is distributed in the hope that it will be useful,         *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of       *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        *)
(* GNU General Public License for more details.                         *)
(*                                                                      *)
(* You should have received a copy of the GNU General Public License    *)
(* along with CPN Tools.  If not, see <http://www.gnu.org/licenses/>.   *)
(************************************************************************)
ORIGIN '../mlparse';
INCLUDE '~beta/basiclib/external';
INCLUDE '~beta/sysutils/cstring';
INCLUDE '../../../cpntools/relfile';

BUILD nti     '$$/mlparse.obj' 'external/mlparse.c' 'betacc -v $0 $1'
      ppcmac  ':$$:mlparse.obj' ':external/mlparse.c' 'mrc -proto strict -proto auto -shared_lib_export on -o $0 $1'
      default '$$/mlparse.o' 'external/mlparse.c' '$CC -Iexternal -D$$ -c -o $0 $1';

BUILD nti     '$$/lex.yy.obj' 'external/lex.yy.c' 'betacc -v $0 $1'
      ppcmac  ':$$:lex.yy.obj' ':external/lex.yy.c' 'mrc -proto strict -proto auto -shared_lib_export on -o $0 $1'
      default '$$/lex.yy.o' 'external/lex.yy.c' '$CC -Iexternal -D$$ -c -o $0 $1';

BUILD nti     '$$/mlparse.tab.obj' 'external/mlparse.tab.c' 'betacc -v $0 $1'
      ppcmac  ':$$:mlparse.tab.obj' ':external/mlparse.tab.c' 'mrc -proto strict -proto auto -shared_lib_export on -o $0 $1'
      default '$$/mlparse.tab.o' 'external/mlparse.tab.c' '$CC -Iexternal -D$$ -c -o $0 $1';

--- MLParseDoPart:DoPart ---
do (# t: @CString;
      mlparse_parse: External
        (# decl: @int32;
	     tmppath: @int32;
           retval: @int32;
        enter (decl, tmppath)
        exit retval
        #);
      
      mlparse_getxml: External
        (# retval: @int32;
        exit retval
        #);
      
      mlparse_clearxml: External
        (# #);
      
      cstr: @CString;
   do (if input[] <> NONE then
          (if input.length > 0 then
              getTemporaryPath -> t.set;
              (if (((@@input.T[1]), t)->mlparse_parse) = 0 then
                  false->error;
               else
                  true->error;
              if);
              
              mlparse_getxml->cstr;
              cstr.get->output[];
              mlparse_clearxml;
          if);
      if);
   #);
